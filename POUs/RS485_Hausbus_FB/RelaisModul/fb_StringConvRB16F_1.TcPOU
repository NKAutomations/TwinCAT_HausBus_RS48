<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="fb_StringConvRB16F_1" Id="{a08f8f95-4e65-4dac-9262-070148a42f4f}" SpecialFunc="None">
    <Declaration><![CDATA[(*======================================================================================================================================*)
(*fb_StringConvRB16F:	Zusammensetzen des Strings für 16Fach Bus Relaismodul		*)
(*
Date          	| Version    	| created under        	| Author          	| Remark *)
(*====================================================================================================================================================*)
(*08/05/2025   	| 1.00      		| TC3		  		| N.Kersting       | first release *)
(*====================================================================================================================================================*)
FUNCTION_BLOCK fb_StringConvRB16F_1
VAR_INPUT
	I_bReset			:BOOL;							(* Reset Befehl auslösen *)
	I_bRedLEDOn			:BOOL;							(* Schaltet nur die Rote Modul LED ein*)
	I_bRedLEDOff		:BOOL;							(* Schaltet nur die Rote Modul LED aus*)
	I_diID				:DINT;							(* Device ID *)
	I_bOut    	 		:ARRAY[1..16] OF BOOL;     	  	(* gewünschter Relais zustand (TRUE = An %)*)
	
	I_iSection			:INT :=1;							(* Paarweise Schalten 1= 1&2 2= 3&4 usw. *)
	
	I_sStartZeichen		:BYTE := 16#FD;					(* Startzeichen Präfix *)
	I_sEndZeichen		:BYTE := 16#FE;					(* Endzeichen Suffix *)
END_VAR
VAR_OUTPUT
	Q_sConvString		:STRING(255);
END_VAR
VAR
	iStartOut			:INT := 1;
	iStartInstIDExt		:INT :=65;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT I_bReset
THEN
	IF I_bRedLEDOn
	THEN
		(* Rote Modul LED Ein*)
		iStartInstIDExt := 210;
		
		Q_sConvString:=	CONCAT(F_ToCHR(I_sStartZeichen),DINT_TO_STRING(I_diID));
		Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
		Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
		Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
		Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
	ELSIF
		I_bRedLEDOff
	THEN
		(* Rote Modul LED Aus*)
		iStartInstIDExt := 210;
		
		Q_sConvString:=	CONCAT(F_ToCHR(I_sStartZeichen),DINT_TO_STRING(I_diID));
		Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
		Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
		Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
		Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
	ELSE
		CASE I_iSection OF
			
		0:	Q_sConvString:='';
		
		1:	(* 1 & 2 Schalten *)
			iStartInstIDExt := 17;
			iStartOut :=	1;
			
			Q_sConvString:=	CONCAT(F_ToCHR(I_sStartZeichen),DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
			
			(* ##2 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
		
			(* ##3 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
			
			(* ##4 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
		
			(* ##5 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
			
			(* ##6 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
		
			(* ##7 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
			
			(* ##8 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
		
		2:	(* 9 & 10 Schalten *)
			iStartInstIDExt := 33;
			iStartOut :=	9;
			
			Q_sConvString:=	CONCAT(F_ToCHR(I_sStartZeichen),DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
			
			(* ##10 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
		
			(* ##11 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
			
			(* ##12 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
		
			(* ##13 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
			
			(* ##14 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
		
			(* ##15 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
			
			(* ##16 ##*)
			iStartInstIDExt := iStartInstIDExt +1;
			iStartOut:= iStartOut+1;
			
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sStartZeichen));
			Q_sConvString:=	CONCAT(Q_sConvString,DINT_TO_STRING(I_diID));
			Q_sConvString:=	CONCAT(Q_sConvString,'.OUT.');
			Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(iStartInstIDExt));
			IF I_bOut[iStartOut]
			THEN
				Q_sConvString:=	CONCAT(Q_sConvString,'.ON');
			ELSE
				Q_sConvString:=	CONCAT(Q_sConvString,'.OFF');
			END_IF
			Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
		END_CASE
	END_IF
	
ELSE
	(* Reset *)
	Q_sConvString:=	CONCAT(F_ToCHR(I_sStartZeichen),DINT_TO_STRING(I_diID));
	Q_sConvString:=	CONCAT(Q_sConvString,'.SYS.');
	Q_sConvString:=	CONCAT(Q_sConvString,INT_TO_STRING(1));
	Q_sConvString:=	CONCAT(Q_sConvString,'.RESET');
	Q_sConvString:=	CONCAT(Q_sConvString,F_ToCHR(I_sEndZeichen));
END_IF

]]></ST>
    </Implementation>
    <LineIds Name="fb_StringConvRB16F_1">
      <LineId Id="193" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="760" Count="1" />
      <LineId Id="1061" Count="1" />
      <LineId Id="1064" Count="3" />
      <LineId Id="1073" Count="0" />
      <LineId Id="789" Count="0" />
      <LineId Id="1074" Count="0" />
      <LineId Id="1080" Count="3" />
      <LineId Id="1085" Count="3" />
      <LineId Id="1093" Count="0" />
      <LineId Id="1079" Count="0" />
      <LineId Id="763" Count="0" />
      <LineId Id="1159" Count="0" />
      <LineId Id="1191" Count="2" />
      <LineId Id="1162" Count="28" />
      <LineId Id="1160" Count="0" />
      <LineId Id="1194" Count="0" />
      <LineId Id="1439" Count="4" />
      <LineId Id="1200" Count="24" />
      <LineId Id="1195" Count="0" />
      <LineId Id="1225" Count="0" />
      <LineId Id="1444" Count="4" />
      <LineId Id="1231" Count="24" />
      <LineId Id="1226" Count="0" />
      <LineId Id="1256" Count="0" />
      <LineId Id="1449" Count="4" />
      <LineId Id="1262" Count="24" />
      <LineId Id="1257" Count="0" />
      <LineId Id="1287" Count="0" />
      <LineId Id="1289" Count="28" />
      <LineId Id="1288" Count="0" />
      <LineId Id="1318" Count="0" />
      <LineId Id="1454" Count="4" />
      <LineId Id="1324" Count="24" />
      <LineId Id="1319" Count="0" />
      <LineId Id="1349" Count="0" />
      <LineId Id="1459" Count="4" />
      <LineId Id="1355" Count="24" />
      <LineId Id="1350" Count="0" />
      <LineId Id="1380" Count="0" />
      <LineId Id="1464" Count="4" />
      <LineId Id="1386" Count="24" />
      <LineId Id="1381" Count="0" />
      <LineId Id="1043" Count="0" />
      <LineId Id="762" Count="0" />
      <LineId Id="551" Count="0" />
      <LineId Id="187" Count="5" />
      <LineId Id="186" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="557" Count="0" />
      <LineId Id="197" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>