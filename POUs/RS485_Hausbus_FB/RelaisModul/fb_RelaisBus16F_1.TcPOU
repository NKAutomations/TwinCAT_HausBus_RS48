<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="fb_RelaisBus16F_1" Id="{3eb1514b-0b01-45aa-a981-1065e62e97ff}" SpecialFunc="None">
    <Declaration><![CDATA[(*======================================================================================================================================*)
(*fb_RelaisBus16F:		Einfache RS485 Kommunikation für Haus-bus.de Komponenten zum testen 	
						 *)
(*
Date          	| Version    	| created under        	| Author          	| Remark *)
(*====================================================================================================================================================*)
(*08/05/2025   	| 1.00      		| TC3		  		| N.Kersting       	| first release *)
(*08/05/2025   	| 1.01      		| TC3		  		| N.Kersting       	| Relais in Sections aufgeteilt um String Länge zu verringern *)
(*09/05/2025   	| 1.02      		| TC3		  		| N.Kersting       	| Ping Versuche Implementiert mit Globalen Parametern *)
(*10/05/2025   	| 2.00      		| TC3		  		| N.Kersting      	| Umstellung auf Externe FiFo Sendebaustein *)
(*12/05/2025   	| 2.01      		| TC3		  		| N.Kersting      	| Verriegelung für ComCheck hinzugefügt und Relais Sections auf 2 redzuziert *)
(*13/05/2025   	| 3.00      		| TC3		  		| N.Kersting       	| Viele Bugs gefixt, bei Änderung der Ausgängen wird nun eine Anforderung gesetzt  *)
(*====================================================================================================================================================*)
FUNCTION_BLOCK fb_RelaisBus16F_1
VAR_INPUT
	I_FifoID			:INT;
	I_bPingStart		:BOOL;						(* Ping Done vom Vorheriegen*)
	I_stInput			:ST_BusRelais16F_Input;
	I_StringReceived	:STRING(255);
END_VAR
VAR_OUTPUT
	Q_sFiFoSend			:STRING(255);
   	Q_stOutput			:ST_BusRelais16F_Output;
	Q_stCnt				:ST_BusRelais16F_Cnt;
END_VAR
VAR
(*----------------------------------------------*)
(* Interne Parameter*)
(*----------------------------------------------*)		
	bSetExecute			:BOOL := TRUE;				(* Aktiviert die Schrittketten, welche Telegramme versenden *)
	bCheckPing			:BOOL := TRUE;				(* Ping Checken Schrittkette Aktivieren *)
	sStartZeichen		:BYTE := 16#FD;				(* Startzeichen Präfix *)
	sEndZeichen			:BYTE := 16#FE;				(* Endzeichen Suffix *)
	iAnzResetSend		:INT := 2;					(* Anzahl der Sendeversuche bei Reset *)
	tPingTimer			:TIME:= T#5S;				(* Zeit, bis wiederholend der Ping versendet wird *)
	tReceiveTimeout		:TIME:= T#2S;				(* Zeit, bis die Event Schrittkette für das Empfangen Automatisch neu Startet*)
	tStartupLEDOn		:TIME:= T#3S;				(* Zeit, wie Lange die LEDS beim Startup kurz eingeschaltet werden *)
	tResetTimeout		:TIME:= T#8S;				(* Zeit, bis bei einem Reset es zu einem Fehler kommt, wenn kein Ping empfangen wird *)
	tResetReboot		:TIME:= T#3S;				(* Zeit, die nach einem Reset Abgewaretet wird damit das Gerät neustarten kann*)
	tResetStartup		:TIME:= T#1S;				(* Zeit, die nach einem Reset Abgewaretet wird bis ein Startup ausgeführt wird nach dem erhalt des Pings vom Gerät*)
	tStartupAfterReset	:TIME := T#5S;				(* Zeit, wann das Startup Zurückgesetzt wird, wenn der Ping verloren wird *)
(*----------------------------------------------*)
(* Strings *)
(*----------------------------------------------*)			
	sSendString			:STRING(255);
	sFiFoSend			:STRING(255);
	sReceived			:STRING(255);
	sLastSendString		:STRING(255);
	sLastSendString1	:STRING(255);
	sStateReset			:STRING;
(*----------------------------------------------*)
(* Funktionsbausteine *)
(*----------------------------------------------*)
	fbBusTasterEvent	:ARRAY[1..8] OF fb_BusTasterEvent;		(* Interne 8 Taster Abfragen *)
	fbStringConvR1B6F	:fb_StringConvRB16F;
	fbRS485ComCheck		:fb_RS485ComCheck;
(*----------------------------------------------*)
(* Indexe *)
(*----------------------------------------------*)	
	iDeviceStartup		:INT :=0;	(* Startup Schrittkette *)
	sDeviceStartup		:STRING;
    iState     			:INT := 0;
	iStepSet			:INT;
	i,h,j,l				:INT;
	idxLED				:INT;
	idxBtn				:INT := 1;
	ibOutMem			:ARRAY[1..16] OF BOOL;
	ibOutAnf			:ARRAY[1..16] OF BOOL;
	cntChangesOut		:INT;
	icntResetSend		:INT;
	iSection			:INT :=1;
	iMaxPingTry			:INT := 5;
(*----------------------------------------------*)
(* Timer/Trigger *)
(*----------------------------------------------*)		
	r_trigStartupAfterReset	:r_trig;
	r_TrigReset				:r_trig;		
	r_TrigCountBtn			:ARRAY[1..16] OF r_trig;
	
	tonStartupAfterReset	:ton;
	tonReceiveTimeout		:ton;
	tonResetTimeout			:ton;
	tonResetDone			:ton;
	tonStepStartup			:ton;
(*----------------------------------------------*)
(* Status *)
(*----------------------------------------------*)			
	bPingOK					:BOOL;
	bErrorEvent				:BOOL;
	bErrorPing				:BOOL;
	bErrorSet				:BOOL;
	bErrorReset				:BOOL;
	bResetBusy				:BOOL;
	bResetDone				:BOOL;
	bResetAutoStart			:BOOL;
	bStartupStart			:BOOL;
	bStartupDone			:BOOL;	
	bMemExt					:BOOL;
	bStartUpCheckPing		:BOOL;
	bActivateSend			:BOOL;
	bReadyToPing			:BOOL;
	bPingFreigabe			:BOOL;
	bSendeAnforderung		:BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*============================================================================================*)
(* Parameter *)
tPingTimer :=		GVL_HausBus_Parameter.cTimePingTimeRelais;
tReceiveTimeout :=	GVL_HausBus_Parameter.cTimeReceiveTimeoutRelais;
bCheckPing :=		GVL_HausBus_Parameter.bUseRelaisPing;
iMaxPingTry :=		GVL_HausBus_Parameter.cMaxPingTry;

(*============================================================================================*)
(* Startup Zurücksetzen Reset *)
r_TrigReset(CLK := I_stInput.bReset);

(* Startup Zurücksetzen bei Busverlust *)
tonStartupAfterReset(
	IN := NOT bPingOK
			AND bCheckPing,
	PT:= tStartupAfterReset);

r_trigStartupAfterReset
	(CLK := tonStartupAfterReset.Q);
	
IF NOT I_stInput.bExecute
	OR r_TrigReset.Q
	OR r_trigStartupAfterReset.Q
THEN
	iDeviceStartup := 0;
END_IF

(*============================================================================================*)
(* Ping Dauerhaft Senden*)
ac02_Ping();
	
(*============================================================================================*)
(* Startup Schrittkette *)
CASE iDeviceStartup OF
(*============================================================================================*)
0: 	sDeviceStartup := 'INIT';
	bResetDone := FALSE;
	bStartupDone := FALSE;
	bStartupStart := FALSE;
	bResetAutoStart := FALSE;
	bStartUpCheckPing := FALSE;
	bActivateSend := FALSE;
	bReadyToPing := TRUE;
	bPingFreigabe := FALSE;
	
	iStepSet := 0;
	
	IF 	I_stInput.bExecute
	THEN
		iDeviceStartup := iDeviceStartup+1;
	END_IF
(*============================================================================================*)
1: 	sDeviceStartup := 'Device ID Prüfen';
	
	IF  I_stInput.diID <> 0
	THEN
		iDeviceStartup := iDeviceStartup+1;
	ELSE
		sDeviceStartup := 'ERROR- Device ID Prüfen';
	END_IF
(*============================================================================================*)
2: 	sDeviceStartup := 'Verbindung Prüfen';
	bStartUpCheckPing := TRUE;
	bPingFreigabe := TRUE;
	bActivateSend := TRUE;	(* Senden Aktivieren *)
	
	sDeviceStartup := CONCAT(sDeviceStartup,fbRS485ComCheck.Q_sState);
	
	IF fbRS485ComCheck.Q_bComOk
		OR NOT bCheckPing
	THEN
		iDeviceStartup := iDeviceStartup+1;
	END_IF

(*============================================================================================*)
3: 	sDeviceStartup := 'Reset Ausführen';	
	bActivateSend := TRUE;	(* Senden Aktivieren *)
	
	(*	RESET Device *)
	ac01_SetReset();
	bResetAutoStart := TRUE;
	
	sDeviceStartup :=	CONCAT(sDeviceStartup,sStateReset);
	
	IF bResetDone
	THEN
		iStepSet := 0;
		iDeviceStartup := iDeviceStartup+1;
	END_IF

(*============================================================================================*)
4: 	sDeviceStartup := 'Startup Ausführen';
		
	(* LED Setzen *)
	ac01_SetOutput();
	
	bStartupStart := TRUE;
	
	IF bStartupDone 
	THEN
		bStartupStart := FALSE;
		iDeviceStartup := 999;
	END_IF

(*============================================================================================*)
999: 
	(*bReadyToPing := NOT fbRS485SendCmd.Q_bBusy;*)
	
	(* LED Setzen *)
	ac01_SetOutput();
	
	(* Events Auslesen *)
	ac00_Event();
	
	(* Zähler *)
	ac10_Counter();
	
	sDeviceStartup := 'Startup Ausgeführt- Gerät im OP';
	
END_CASE

(*============================================================================================*)
(* Sendebaustein *)
IF bActivateSend
THEN
	IF fbRS485ComCheck.Q_sSend <>''
	THEN
		Q_sFiFoSend :=	fbRS485ComCheck.Q_sSend;
	ELSE
		Q_sFiFoSend :=	sFiFoSend;
	END_IF
END_IF

(*============================================================================================*)	
(* Zähler *)
ac10_Counter();
	
(*============================================================================================*)
(* Outputs *)
Q_stOutput.bCOM :=		bPingOK;

Q_stOutput.bError := 	bErrorEvent
						OR bErrorPing
						OR bErrorSet
						OR (NOT bPingOK
						AND bCheckPing);
						
Q_stOutput.bStartupDone	:=	bStartupDone;

Q_stOutput.sState :=	CONCAT(I_stInput.sName,'| ');
Q_stOutput.sState :=	CONCAT(Q_stOutput.sState, sDeviceStartup);]]></ST>
    </Implementation>
    <Action Name="ac00_Event" Id="{b9961cb9-a9d5-48b1-bf31-3818b319198a}">
      <Implementation>
        <ST><![CDATA[(*============================================================================================*)
(*	EVENT Schrittkette *)
(*============================================================================================*)
sReceived := I_StringReceived;
	
FOR i := 1 TO 8 BY 1 DO 
	fbBusTasterEvent[i](
		I_sID:= 				DINT_TO_STRING(I_stInput.diID), 
		I_sInstID:= 			INT_TO_STRING(i+96), 
		I_sReceivedString:= 	sReceived, 
		Q_bOut=> 				Q_stOutput.bInputs[i]);
END_FOR]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac01_SetOutput" Id="{81e49262-a8ec-4462-96f7-90a75727f674}">
      <Implementation>
        <ST><![CDATA[(*============================================================================================*)
(*	LED Helligkeit Setzen/ Startup Schrittkette *)
(*============================================================================================*)

(* Einfaches Setzen der LED Helligkeiten (0-100 Prozent *)
(* Neu, es werden alle LEDs zu einem String zusammengefügt und Gleichzeitig gesetzt *)
tonStepStartup(
	PT:= tStartupLEDOn);

cntChangesOut := 0;
FOR l := 1 TO 16 BY 1 DO
	IF ibOutMem[l] <> I_stInput.bOut[l]
	THEN
		cntChangesOut := cntChangesOut +1;
	END_IF
END_FOR
	
CASE iStepSet OF
(*============================================================================================*)
0:	(* INIT und warten auf Change *)
	tonStepStartup.IN := FALSE;
	bPingFreigabe := TRUE; 
	iSection := 1;
	
	(* Merken ob eine Anforderung Ansteht *)
	IF cntChangesOut <>0
	THEN
		bSendeAnforderung := TRUE;
		FOR h := 1 TO 16 BY 1 DO
			ibOutAnf[h] := I_stInput.bOut[h];
		END_FOR
	END_IF
	
	IF (bSendeAnforderung
		AND bSetExecute)
		AND NOT bStartupStart
		AND fbRS485ComCheck.Q_sSend =''
	THEN
		bSendeAnforderung := FALSE;
		bPingFreigabe := FALSE; 
		(* Angeforderten Relaiszustand speichern *)
		FOR h := 1 TO 16 BY 1 DO
			ibOutMem[h] := I_stInput.bOut[h];
		END_FOR
		iStepSet := 10;
	ELSIF
		bStartupStart
	THEN
		iStepSet := 100;	(* Startup *)
	END_IF
	
(*============================================================================================*)
10:	(* String senden *)	
	(* Nur Relais Schreiben *)
	
	fbStringConvR1B6F(
		I_bReset:= 			FALSE, 
		I_bRedLEDOn:= 		FALSE, 
		I_bRedLEDOff:= 		FALSE, 
		I_iSection :=		iSection,
		I_diID:= 			I_stInput.diID, 
		I_bOut:= 			ibOutAnf, 
		I_sStartZeichen:= 	sStartZeichen, 
		I_sEndZeichen:= 	sEndZeichen,	 
		Q_sConvString=> 	sSendString);
		
	(* Senden an FiFo*)
	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		sFiFoSend :=	sSendString;
	END_IF
	IF NOT GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		IF iSection <= 2
		THEN
			iSection :=	iSection+1;
		END_IF
		
		iStepSet := 20;
	END_IF
		
(*============================================================================================*)	
20:	(* Warten bis nicht Busy *)	
	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]	
	THEN
		sFiFoSend := ''; 
		
		IF iSection <= 2
		THEN
			sLastSendString :=	sSendString;
			iStepSet := 10;
		ELSE
			sLastSendString1 :=	sSendString;
			iStepSet := 0;
		END_IF
	END_IF
	
(*============================================================================================*)	
(* Startup  *)
100:	tonStepStartup.IN := TRUE;
	
	IF tonStepStartup.Q
	THEN
		iStepSet := 110;
	END_IF
	
(*============================================================================================*)
110:(* String senden *)	(* Alle Relais Ausschalten *)
	tonStepStartup.IN := FALSE;
		
	fbStringConvR1B6F(
		I_bReset:= 			FALSE, 
		I_bRedLEDOn:= 		FALSE, 
		I_bRedLEDOff:= 		FALSE, 
		I_iSection :=		iSection,
		I_diID:= 			I_stInput.diID, 
		I_bOut:= 			I_stInput.bOut, 
		I_sStartZeichen:= 	sStartZeichen, 
		I_sEndZeichen:= 	sEndZeichen,	 
		Q_sConvString=> 	sSendString);
		
	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		sFiFoSend :=	sSendString;
	END_IF
	IF NOT GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		IF iSection <= 2
		THEN
			iSection :=	iSection+1;
		END_IF
		
		iStepSet := 111;
	END_IF
	
(*============================================================================================*)
111:(* String senden *)
	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		sLastSendString :=	sSendString;
		sFiFoSend := ''; 
		
		IF iSection <= 2
		THEN
			iStepSet := 110;
		ELSE
			iStepSet := 112;
		END_IF
	END_IF
	
(*============================================================================================*)
112:(* String senden *)	(* Rote LED Einschalten *)
	tonStepStartup.IN := FALSE;
		
	fbStringConvR1B6F(
		I_bReset:= 			FALSE, 
		I_bRedLEDOn:= 		TRUE, 
		I_bRedLEDOff:= 		FALSE, 
		I_diID:= 			I_stInput.diID, 
		I_bOut:= 			I_stInput.bOut, 
		I_sStartZeichen:= 	sStartZeichen, 
		I_sEndZeichen:= 	sEndZeichen,	 
		Q_sConvString=> 	sSendString);
					
	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		sFiFoSend :=	sSendString;
	END_IF
	IF NOT GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		iStepSet := 113;
	END_IF
	
(*============================================================================================*)
113:(* String senden *) (* Warten *)
	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		sFiFoSend := ''; 
		tonStepStartup.IN := TRUE;
		
		IF tonStepStartup.Q
		THEN
			tonStepStartup.IN := FALSE;
			iStepSet := 114;
		END_IF
	END_IF

(*============================================================================================*)
114:(* String senden *)	(* Rote LED Ausschalten *)
	tonStepStartup.IN := FALSE;
	
	fbStringConvR1B6F(
		I_bReset:= 			FALSE, 
		I_bRedLEDOn:= 		FALSE, 
		I_bRedLEDOff:= 		TRUE, 
		I_diID:= 			I_stInput.diID, 
		I_bOut:= 			I_stInput.bOut, 
		I_sStartZeichen:= 	sStartZeichen, 
		I_sEndZeichen:= 	sEndZeichen,	 
		Q_sConvString=> 	sSendString);
			
	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		sFiFoSend :=	sSendString;
	END_IF
	IF NOT GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		iStepSet := 120;
	END_IF
	
(*============================================================================================*)	
120:(* Warten bis nicht Busy *)	
	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		sFiFoSend := ''; 
				
		tonStepStartup.IN := TRUE;
	
		IF tonStepStartup.Q
		THEN
			bStartupDone := TRUE;
			tonStepStartup.IN := FALSE;
			bStartupStart := FALSE;
			iStepSet := 10;	(* Anschließend noch einmal die Eingangs Helligkeit setzen *)
		END_IF
	END_IF	

END_CASE
]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac01_SetReset" Id="{ecc07304-2937-4f24-a4dc-b7136f747a78}">
      <Implementation>
        <ST><![CDATA[(*============================================================================================*)
(*	RESET Schrittkette *)
(*============================================================================================*)
tonResetTimeout(
	PT := tResetTimeout);

tonResetDone();

(* Einfaches Setzen der LED Helligkeiten (0-100 Prozent *)
CASE iStepSet OF
(*============================================================================================*)
0:	sStateReset := 'INIT';
	
	IF (bSetExecute
		AND (I_stInput.bReset
		OR bResetAutoStart))
	THEN
		bStartupDone := FALSE;
		bResetDone := FALSE;
		tonResetTimeout.IN := FALSE;
		tonResetDone.IN := FALSE;
		icntResetSend := 0;
		
		(* Ausgänge alle auf 0 setzen *)
		FOR h := 1 TO 16 BY 1 DO
			ibOutMem[h] := FALSE;
			Q_stOutput.bInputs[h] := FALSE;
		END_FOR
		
		bPingOK := FALSE;
		
		iStepSet := iStepSet +1;
	END_IF

(*============================================================================================*)	
1:	sStateReset := 'Sende Reset Befehl';
	bResetBusy := TRUE;
	bErrorReset := FALSE;
	
	fbStringConvR1B6F(
		I_bReset:= 			TRUE, 
		I_bRedLEDOn:= 		FALSE, 
		I_bRedLEDOff:= 		FALSE, 
		I_diID:= 			I_stInput.diID, 
		I_bOut:= 			I_stInput.bOut, 
		I_sStartZeichen:= 	sStartZeichen, 
		I_sEndZeichen:= 	sEndZeichen,	 
		Q_sConvString=> 	sSendString);

	(* Senden an FiFo*)
	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		sFiFoSend :=	sSendString;
	END_IF
	IF NOT GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		iStepSet := iStepSet+1;
	END_IF

(*============================================================================================*)
2:	sStateReset := 'Sende Reset Befehl';

	IF GVL_RS485FiFoSend.bSendDoneFiFo[I_FifoID]
	THEN
		sFiFoSend := ''; 
		
		fbStringConvR1B6F(
			I_bReset :=			FALSE);
		iStepSet := 3;
	END_IF
	
(*============================================================================================*)	
3:	sStateReset := 'Reset durchgeführt, Warte auf Ping';
	tonResetDone.IN := TRUE;
	tonResetDone.PT := tResetReboot;
		
	iState := 0;
	
	IF tonResetDone.Q
	THEN
		tonResetDone.IN := FALSE;
		iStepSet := 4;
	END_IF
	
(*============================================================================================*)	
4:	sStateReset := 'Warte auf Ping vom Gerät';	
	tonResetTimeout.IN := TRUE;
	
	IF bPingOK 
		OR NOT bCheckPing
	THEN
		bErrorReset := FALSE;
		tonResetTimeout.IN := FALSE;
		iStepSet := 5;
	ELSIF
		tonResetTimeout.Q
	THEN
		sStateReset := 'Ping Timeout, keine Kommunikation';
		bErrorReset := TRUE;

		IF I_stInput.bReset
		THEN
			bResetBusy := FALSE;
			iStepSet := 0;
		END_IF
	END_IF

(*============================================================================================*)
5:	sStateReset := 'Startup Aktiv';
	
	tonResetDone.IN := NOT I_stInput.bReset;
	tonResetDone.PT := tResetStartup;

	sFiFoSend := ''; 
	
	IF tonResetDone.Q
	THEN
		fbStringConvR1B6F(
			I_bReset :=			FALSE);
			
		sStateReset := 'Ping erhalten, Reset Erfolgreich';
		bResetAutoStart := FALSE;
		bResetDone := TRUE;
		bResetBusy := FALSE;
		iState := 0;
		iStepSet := 0;
	END_IF
END_CASE]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac02_Ping" Id="{a3a59361-443a-465b-b034-e0d2cc4c4fd8}">
      <Implementation>
        <ST><![CDATA[(*============================================================================================*)
(* 	Ping Bautsein, Checkt ob die Kommunikation vorhanden ist *)
(*============================================================================================*)
fbRS485ComCheck(
	I_FifoID:=				I_FifoID,
	I_bExecute:= 			bCheckPing
							AND bStartUpCheckPing
							(*AND bReadyToPing*), 
	I_bStart :=				I_bPingStart
							AND bPingFreigabe,
	I_bTasterMode:=			FALSE,
	I_StringReceived:=		I_StringReceived,
	I_tPingIntervall:= 		tPingTimer, 
	I_tPingTimeout:= 		tReceiveTimeout, 
	I_diID:= 				I_stInput.diID, 
	I_sPingSymbol:= 		'.BTN.', 
	I_iInstID:= 			97, 
	I_sStartZeichen:= 		sStartZeichen, 
	I_sEndZeichen:= 		sEndZeichen, 
	I_iMaxPingTry :=		iMaxPingTry,	 
	Q_bComOk=> 				bPingOK, 
	Q_bError=> 				bErrorPing,
	Q_bSendDone=>			(*Q_bPingDone*));
	
	
	]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac10_Counter" Id="{a354a753-e345-4d4d-a594-ff8c2c0a8929}">
      <Implementation>
        <ST><![CDATA[(*============================================================================================*)
(* 	Zähler *)
(*============================================================================================*)
FOR j := 1 TO 16 BY 1 DO 
	r_TrigCountBtn[j](
		CLK := I_stInput.bOut[j]);
		
	IF r_TrigCountBtn[j].Q
	THEN
		Q_stCnt.dwCntRelais[j] := Q_stCnt.dwCntRelais[j]+1;
	END_IF
	
END_FOR]]></ST>
      </Implementation>
    </Action>
    <Action Name="ac99_Doku" Id="{53c6f238-c453-442d-8e22-f70cf61735f8}">
      <Implementation>
        <ST><![CDATA[(*======================================================================================================================================*)
(*	DOKU	*)
(*======================================================================================================================================*)
(* Wichtiger Hinweis:
		-Bei dem 6 Fach Taster ist zu Beachten, dass es nur 4 Externe EA/s gibt also 4 LEDs und 4 Taster, 
		da der ESP 32 Nur 10Es und 10As besitzt.
		- Die 4 Zusätzlichen Ausgänge werden von der Hintergrundbeleuchtung Ausgeschlossen und müssen über den Befehl: SET_MBR einzeln 
			gesetzt werden! *)	
	
(* Verdrahtung:		
	Verdrahtung füR: KL6041
        +-------+
        |       |
        | TxD+ ----+
        |         |----> RS485 A (zum Bus)
        | RxD+ ----+
        |         |
        | TxD− ----+
        |         |----> RS485 B (zum Bus)
        | RxD− ----+
        +-------+	*)
		
(*======================================================================================================================================*)
(* Telegrammbeschreibung *)

(*	Die XML Dateien der verschiedenen Module sind grundsätzlich immer gleich aufgebaut. 
	Je Instanz der verschiedenen Sensoren und Aktoren werden die zu sendenden Befehle bzw. 
	die zu empfangenen Events beschrieben. 
	Alle Telegramme sind ASCII kodiert und sind umgeben mit dem binären Startzeichen 0xFD und dem binären Endezeichen 0xFE.

	Grundaufbauer aller im Folgenden beschriebenen Telegramme:
	
	-Startzeichen immer 0xFD.
	-Punkte dienen als Trennzeichen der verschiedenen Elemente
	-Endezeichen immer 0xFE.
	-Element 1 ist die Geräte-ID, die entsprechend der verwendeten Module angepasst werden muss (hier beispielhaft jeweils 12345)
	-Element 2 ist ein Schlüsselwort für den jeweiligen Funktionstyp (z.b. BTN, LED, DIM, usw)
	-Element 3 ist die InstanzID gemäß XML Templates (also welche Taster oder welcher Dimmer konkret gemeint ist)
	-Element 4 zeigt die jeweilige Aktion zum Funktionstypen (z.b. ON, OFF, STATUS)
	-Anschließend kommen optional diverse Parameter, die mit P1,P2,...P3 bezeichnet werden
	
	Im Folgenden wird nur noch auf die speziellen Telegramdaten eingegangen:
	
	(*------------------------------------------------------------*)
	Taster oder digitaler Eingang (Sensor):
	(*------------------------------------------------------------*)
	Telegram Event:  	
	
	\xFD 12345.BTN.17.STATUS.P1 \xFE
	
		Funktionstyp:		BTN (kurz für Button)
		Instanz-ID:			hier 17 (in XML nachschauen)
		Aktion:				STATUS
		P1:					1, wenn Taste gedrückt bzw. Eingang aktiv
							0, wenn Taste losgelassen bzw. Eingang inaktiv
	
	Telegram Statusabfrage:  	
	
	\xFD 12345.BTN.17.gSTATUS \xFE
	
		Antwort:  			\xFD 12345.BTN.17.rSTATUS.P1 \xFE
		P1:					1, wenn Taste gedrückt bzw. Eingang aktiv
							0, wenn Taste losgelassen bzw. Eingang inaktiv

	(*------------------------------------------------------------*)
	Led (Aktor):
	(*------------------------------------------------------------*)
	Telegram Helligkeit setzen:  	
	
	\xFD 12345.LED.50.ON.P1.P2.P3 \xFE
	
		Funktionstyp:			LED
		Instanz-ID:				hier 50 (in XML nachschauen)
		Aktion:					ON
		P1:						gewünschte Helligkeit 0-100
		P2:						Einschaltdauer in 100stel Sekunden (0 = daueran)
		P3:						Einschaltverzögerung in Sekunden (0 = ohne Verzögerung)
	
	Telegram Mindesthelligkeit:  	
	
	\xFD 12345.LED.50.SET_MBR.P1 \xFE
		
		Aktion:					SET_MBR (Setzt eine Mindesthelligkeit, die auch dann erhalten bleibt, wenn man per OFF ausschaltet)
		P1:						gewünschte Helligkeit 0-100
	
	Telegram Statusabfrage:  	

	\xFD 12345.LED.50.gSTATUS \xFE
	
		Antwort:  				\xFD 12345.LED.50.rSTATUS.P1.P2 \xFE
		P1:						aktuelle Helligkeit 0-100
		P2:						Einschaltdauer in 100stel Sekunden
	
	(*------------------------------------------------------------*)
	Hintergrundbeleuchtung (Aktor):
	(*------------------------------------------------------------*)
	Telegram Minhelligkeit:  
	
	\xFD 12345.LBN.16.SET_MBR.P1 \xFE
	
		Aktion:					SET_MBR ((Setzt eine Mindesthelligkeit, die auch dann erhalten bleibt, wenn man per OFF ausschaltet)
		P1:						gewünschte Helligkeit 0-100
		
	Telegram Statusabfrage:  	

	\xFD 12345.LBN.16.gSTATUS \xFE
	
		Antwort:  				\xFD 12345.LBN.16.rSTATUS.P1 \xFE
		P1:						aktuelle Helligkeit 0-100

	(*------------------------------------------------------------*)
	Temperatursensor (Sensor):
	(*------------------------------------------------------------*)
	Telegram Event:  	
	
	\xFD 12345.TMP.1.STATUS.P1.P2 \xFE
	
		Funktionstyp:			TMP (kurz für Temperatur)
		Instanz-ID:				hier 1 (in XML nachschauen)
		Aktion:					STATUS
		P1:						Temperatur in Grad Vorkommastellen
		P2:						Temperatur in Grad Nachkommastellen
	
	Telegram Statusabfrage:  
	
	\xFD 12345.TMP.1.gSTATUS \xFE
	
		Antwort:  				\xFD 12345.TMP.1.rSTATUS.P1.P2 \xFE
		P1:						Temperatur in Grad Vorkommastellen
		P2:						Temperatur in Grad Nachkommastellen

	(*------------------------------------------------------------*)
	Feuchtesensor (Sensor):
	(*------------------------------------------------------------*)
	Telegram Event:  	

	\xFD 12345.RHD.1.STATUS.P1.P2 \xFE
	
		Funktionstyp:			RHD (kurz für Relative Humidity)
		Instanz-ID:				hier 1 (in XML nachschauen)
		Aktion:					STATUS
		P1:						Relative Luftfeuchtigkeit 0-100 Vorkommastellen
		P2:						Relative Luftfeuchtigkeit 0-100 Nachkommastellen

	Telegram Statusabfrage:  	
	
	\xFD 12345.RHD.1.gSTATUS \xFE
	
	Antwort:  					\xFD 12345.RHD.1.rSTATUS.P1 \xFE
	P1:							Relative Luftfeuchtigkeit 0-100 Vorkommastellen
	P2:							Relative Luftfeuchtigkeit 0-100 Nachkommastellen

	(*------------------------------------------------------------*)
	Helligkeitssensor (Sensor):
	(*------------------------------------------------------------*)
	Telegram Event:  	
	
	\xFD 12345.BRS.23.STATUS.P1.P2 \xFE
	
		Funktionstyp:			BRS (kurz für Brightness Sensor)
		Instanz-ID:				hier 23 (in XML nachschauen)
		Aktion:					STATUS
		P1:						Relative Helligkeit 0-255 Vorkommastellen
		P2:						Relative Helligkeit 0-255 Nachkommastellen
	
	Telegram Statusabfrage:  	
	
	\xFD 12345.BRS.23.gSTATUS \xFE
	
	Antwort:  					\xFD 12345.BRS.23.rSTATUS.P1 \xFE
	P1:							Relative Helligkeit 0-255 Vorkommastellen
	P2:							Relative Helligkeit 0-255 Nachkommastellen

(*======================================================================================================================================*)
(* Alle Telegramme im Überblick *)	

	<?xml version="1.0" encoding="utf-8"?>
	<Comm Title="Haus-Bus ID 1212" Comment="" Baudrate="57600" Databits="8" Parity="1" EndChar="510">
	<CommCmd Title="16-fach Relais 1212 - Rote Modul LED" Comment="" CmdOn="\xFD1212.OUT.210.ON.0\xFE" CmdOff="\xFD1212.OUT.210.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 1" Comment="" CmdOn="\xFD1212.OUT.17.ON.0\xFE" CmdOff="\xFD1212.OUT.17.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 2" Comment="" CmdOn="\xFD1212.OUT.18.ON.0\xFE" CmdOff="\xFD1212.OUT.18.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 3" Comment="" CmdOn="\xFD1212.OUT.19.ON.0\xFE" CmdOff="\xFD1212.OUT.19.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 4" Comment="" CmdOn="\xFD1212.OUT.20.ON.0\xFE" CmdOff="\xFD1212.OUT.20.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 5" Comment="" CmdOn="\xFD1212.OUT.21.ON.0\xFE" CmdOff="\xFD1212.OUT.21.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 6" Comment="" CmdOn="\xFD1212.OUT.22.ON.0\xFE" CmdOff="\xFD1212.OUT.22.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 7" Comment="" CmdOn="\xFD1212.OUT.23.ON.0\xFE" CmdOff="\xFD1212.OUT.23.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 8" Comment="" CmdOn="\xFD1212.OUT.24.ON.0\xFE" CmdOff="\xFD1212.OUT.24.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 9" Comment="" CmdOn="\xFD1212.OUT.33.ON.0\xFE" CmdOff="\xFD1212.OUT.33.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 10" Comment="" CmdOn="\xFD1212.OUT.34.ON.0\xFE" CmdOff="\xFD1212.OUT.34.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 11" Comment="" CmdOn="\xFD1212.OUT.35.ON.0\xFE" CmdOff="\xFD1212.OUT.35.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 12" Comment="" CmdOn="\xFD1212.OUT.36.ON.0\xFE" CmdOff="\xFD1212.OUT.36.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 13" Comment="" CmdOn="\xFD1212.OUT.37.ON.0\xFE" CmdOff="\xFD1212.OUT.37.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 14" Comment="" CmdOn="\xFD1212.OUT.38.ON.0\xFE" CmdOff="\xFD1212.OUT.38.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 15" Comment="" CmdOn="\xFD1212.OUT.39.ON.0\xFE" CmdOff="\xFD1212.OUT.39.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Relais 16" Comment="" CmdOn="\xFD1212.OUT.40.ON.0\xFE" CmdOff="\xFD1212.OUT.40.OFF\xFE" Unit="" Analog="false" Text="false" Sensor="false" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Eingang 1" Comment="" CmdOn="\xFD1212.BTN.97.STATUS.\v\xFE" CmdOff="" Unit="&lt;v.x&gt;" Analog="true" Text="false" Sensor="true" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Eingang 2" Comment="" CmdOn="\xFD1212.BTN.98.STATUS.\v\xFE" CmdOff="" Unit="&lt;v.x&gt;" Analog="true" Text="false" Sensor="true" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Eingang 3" Comment="" CmdOn="\xFD1212.BTN.99.STATUS.\v\xFE" CmdOff="" Unit="&lt;v.x&gt;" Analog="true" Text="false" Sensor="true" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Eingang 4" Comment="" CmdOn="\xFD1212.BTN.100.STATUS.\v\xFE" CmdOff="" Unit="&lt;v.x&gt;" Analog="true" Text="false" Sensor="true" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Eingang 5" Comment="" CmdOn="\xFD1212.BTN.101.STATUS.\v\xFE" CmdOff="" Unit="&lt;v.x&gt;" Analog="true" Text="false" Sensor="true" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Eingang 6" Comment="" CmdOn="\xFD1212.BTN.102.STATUS.\v\xFE" CmdOff="" Unit="&lt;v.x&gt;" Analog="true" Text="false" Sensor="true" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Eingang 7" Comment="" CmdOn="\xFD1212.BTN.103.STATUS.\v\xFE" CmdOff="" Unit="&lt;v.x&gt;" Analog="true" Text="false" Sensor="true" SourceValHigh="100" DestValHigh="100"/>
	<CommCmd Title="16-fach Relais 1212 - Eingang 8" Comment="" CmdOn="\xFD1212.BTN.104.STATUS.\v\xFE" CmdOff="" Unit="&lt;v.x&gt;" Analog="true" Text="false" Sensor="true" SourceValHigh="100" DestValHigh="100"/>
	</Comm>

*)
		
		]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="fb_RelaisBus16F_1">
      <LineId Id="422" Count="0" />
      <LineId Id="424" Count="0" />
      <LineId Id="418" Count="2" />
      <LineId Id="269" Count="37" />
      <LineId Id="542" Count="1" />
      <LineId Id="307" Count="17" />
      <LineId Id="544" Count="0" />
      <LineId Id="325" Count="0" />
      <LineId Id="540" Count="0" />
      <LineId Id="326" Count="50" />
      <LineId Id="538" Count="0" />
      <LineId Id="384" Count="3" />
      <LineId Id="529" Count="8" />
      <LineId Id="395" Count="13" />
      <LineId Id="429" Count="0" />
      <LineId Id="409" Count="3" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="fb_RelaisBus16F_1.ac00_Event">
      <LineId Id="140" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="141" Count="7" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="fb_RelaisBus16F_1.ac01_SetOutput">
      <LineId Id="386" Count="1" />
      <LineId Id="71" Count="0" />
      <LineId Id="388" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="151" Count="1" />
      <LineId Id="262" Count="0" />
      <LineId Id="859" Count="0" />
      <LineId Id="852" Count="5" />
      <LineId Id="327" Count="0" />
      <LineId Id="858" Count="0" />
      <LineId Id="1" Count="1" />
      <LineId Id="7" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="812" Count="0" />
      <LineId Id="845" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="874" Count="0" />
      <LineId Id="860" Count="0" />
      <LineId Id="862" Count="0" />
      <LineId Id="868" Count="0" />
      <LineId Id="879" Count="1" />
      <LineId Id="878" Count="0" />
      <LineId Id="863" Count="0" />
      <LineId Id="861" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="345" Count="0" />
      <LineId Id="727" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="869" Count="0" />
      <LineId Id="814" Count="0" />
      <LineId Id="871" Count="2" />
      <LineId Id="870" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="158" Count="3" />
      <LineId Id="97" Count="0" />
      <LineId Id="309" Count="0" />
      <LineId Id="282" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="519" Count="0" />
      <LineId Id="572" Count="0" />
      <LineId Id="574" Count="3" />
      <LineId Id="696" Count="0" />
      <LineId Id="578" Count="3" />
      <LineId Id="738" Count="0" />
      <LineId Id="434" Count="0" />
      <LineId Id="758" Count="3" />
      <LineId Id="745" Count="0" />
      <LineId Id="763" Count="1" />
      <LineId Id="767" Count="4" />
      <LineId Id="765" Count="0" />
      <LineId Id="421" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="240" Count="0" />
      <LineId Id="222" Count="0" />
      <LineId Id="340" Count="0" />
      <LineId Id="785" Count="0" />
      <LineId Id="740" Count="0" />
      <LineId Id="705" Count="2" />
      <LineId Id="832" Count="0" />
      <LineId Id="711" Count="0" />
      <LineId Id="709" Count="0" />
      <LineId Id="833" Count="0" />
      <LineId Id="710" Count="0" />
      <LineId Id="708" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="583" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="287" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="265" Count="2" />
      <LineId Id="269" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="285" Count="0" />
      <LineId Id="261" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="365" Count="0" />
      <LineId Id="367" Count="0" />
      <LineId Id="589" Count="2" />
      <LineId Id="712" Count="0" />
      <LineId Id="592" Count="3" />
      <LineId Id="366" Count="0" />
      <LineId Id="217" Count="0" />
      <LineId Id="773" Count="11" />
      <LineId Id="23" Count="0" />
      <LineId Id="694" Count="0" />
      <LineId Id="624" Count="1" />
      <LineId Id="598" Count="0" />
      <LineId Id="786" Count="0" />
      <LineId Id="830" Count="0" />
      <LineId Id="800" Count="0" />
      <LineId Id="831" Count="0" />
      <LineId Id="722" Count="4" />
      <LineId Id="651" Count="0" />
      <LineId Id="648" Count="0" />
      <LineId Id="652" Count="0" />
      <LineId Id="599" Count="3" />
      <LineId Id="607" Count="9" />
      <LineId Id="787" Count="5" />
      <LineId Id="798" Count="0" />
      <LineId Id="653" Count="0" />
      <LineId Id="799" Count="0" />
      <LineId Id="654" Count="1" />
      <LineId Id="801" Count="1" />
      <LineId Id="658" Count="0" />
      <LineId Id="661" Count="0" />
      <LineId Id="688" Count="2" />
      <LineId Id="693" Count="0" />
      <LineId Id="692" Count="0" />
      <LineId Id="691" Count="0" />
      <LineId Id="623" Count="0" />
      <LineId Id="662" Count="4" />
      <LineId Id="671" Count="9" />
      <LineId Id="803" Count="6" />
      <LineId Id="660" Count="0" />
      <LineId Id="687" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="241" Count="0" />
      <LineId Id="810" Count="1" />
      <LineId Id="249" Count="0" />
      <LineId Id="253" Count="0" />
      <LineId Id="272" Count="3" />
      <LineId Id="281" Count="0" />
      <LineId Id="279" Count="0" />
      <LineId Id="276" Count="0" />
      <LineId Id="278" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="221" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="3" Count="0" />
      <LineId Id="154" Count="0" />
    </LineIds>
    <LineIds Name="fb_RelaisBus16F_1.ac01_SetReset">
      <LineId Id="301" Count="1" />
      <LineId Id="300" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="1" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="105" Count="0" />
      <LineId Id="197" Count="1" />
      <LineId Id="253" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="252" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="203" Count="2" />
      <LineId Id="235" Count="0" />
      <LineId Id="209" Count="3" />
      <LineId Id="233" Count="0" />
      <LineId Id="317" Count="0" />
      <LineId Id="234" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="259" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="318" Count="7" />
      <LineId Id="43" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="340" Count="7" />
      <LineId Id="14" Count="0" />
      <LineId Id="260" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="348" Count="1" />
      <LineId Id="278" Count="1" />
      <LineId Id="292" Count="2" />
      <LineId Id="32" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="243" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="237" Count="2" />
      <LineId Id="242" Count="0" />
      <LineId Id="241" Count="0" />
      <LineId Id="240" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="123" Count="1" />
      <LineId Id="303" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="143" Count="3" />
      <LineId Id="152" Count="0" />
      <LineId Id="172" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="149" Count="2" />
      <LineId Id="147" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="264" Count="0" />
      <LineId Id="129" Count="1" />
      <LineId Id="135" Count="0" />
      <LineId Id="245" Count="2" />
      <LineId Id="251" Count="0" />
      <LineId Id="284" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="295" Count="2" />
      <LineId Id="249" Count="0" />
      <LineId Id="255" Count="1" />
      <LineId Id="132" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="128" Count="0" />
      <LineId Id="173" Count="0" />
    </LineIds>
    <LineIds Name="fb_RelaisBus16F_1.ac02_Ping">
      <LineId Id="195" Count="1" />
      <LineId Id="194" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="197" Count="1" />
      <LineId Id="200" Count="0" />
      <LineId Id="207" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="192" Count="0" />
      <LineId Id="179" Count="6" />
      <LineId Id="199" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="174" Count="1" />
    </LineIds>
    <LineIds Name="fb_RelaisBus16F_1.ac10_Counter">
      <LineId Id="16" Count="1" />
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="10" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="fb_RelaisBus16F_1.ac99_Doku">
      <LineId Id="1" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="9" Count="1" />
      <LineId Id="13" Count="0" />
      <LineId Id="192" Count="1" />
      <LineId Id="190" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="180" Count="9" />
      <LineId Id="179" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="3" Count="1" />
      <LineId Id="177" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="28" Count="2" />
      <LineId Id="16" Count="11" />
      <LineId Id="14" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="37" Count="3" />
      <LineId Id="35" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="54" Count="2" />
      <LineId Id="52" Count="1" />
      <LineId Id="50" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="81" Count="2" />
      <LineId Id="65" Count="7" />
      <LineId Id="84" Count="2" />
      <LineId Id="73" Count="0" />
      <LineId Id="75" Count="2" />
      <LineId Id="88" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="78" Count="2" />
      <LineId Id="63" Count="0" />
      <LineId Id="90" Count="2" />
      <LineId Id="107" Count="0" />
      <LineId Id="115" Count="2" />
      <LineId Id="108" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="111" Count="1" />
      <LineId Id="120" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="113" Count="1" />
      <LineId Id="106" Count="0" />
      <LineId Id="93" Count="2" />
      <LineId Id="123" Count="0" />
      <LineId Id="134" Count="2" />
      <LineId Id="124" Count="6" />
      <LineId Id="137" Count="2" />
      <LineId Id="131" Count="2" />
      <LineId Id="122" Count="0" />
      <LineId Id="96" Count="2" />
      <LineId Id="142" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="143" Count="6" />
      <LineId Id="156" Count="2" />
      <LineId Id="150" Count="2" />
      <LineId Id="140" Count="0" />
      <LineId Id="99" Count="2" />
      <LineId Id="160" Count="0" />
      <LineId Id="171" Count="2" />
      <LineId Id="161" Count="6" />
      <LineId Id="174" Count="2" />
      <LineId Id="168" Count="2" />
      <LineId Id="105" Count="0" />
      <LineId Id="231" Count="0" />
      <LineId Id="61" Count="0" />
      <LineId Id="232" Count="28" />
      <LineId Id="230" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="42" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>